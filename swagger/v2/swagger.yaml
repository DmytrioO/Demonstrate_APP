---
openapi: 3.0.1
info:
  title: API V2
  version: v2
  description: This is the second version of behealth API
paths:
  "/api/v2/patient/extra-info":
    get:
      summary: list additional_infos
      tags:
      - Additional Information
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v2/appointments":
    get:
      summary: List all appointments
      tags:
      - Appointments
      parameters:
      - name: upcoming
        in: query
        description: List only upcoming appointments
        schema:
          type: boolean
      - name: past
        in: query
        description: List only past appointments
        schema:
          type: boolean
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    appointment_datetime:
                      type: string
                    status:
                      type: string
                      enum:
                      - cancelled
                      - completed
                      - planned
                      - unconfirmed
                    doctor_id:
                      type: integer
                    patient_id:
                      type: integer
                  required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_id
                  - patient_id
        '401':
          description: unauthorized
    post:
      summary: Create an appointment
      tags:
      - Appointments
      parameters: []
      responses:
        '201':
          description: appointment created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_datetime:
                  type: string
                  format: date-time
                status:
                  type: integer
                  enum:
                  - 0
                  - 1
                  - 2
                  - 3
                  default: 3
                doctor_id:
                  type: integer
                patient_id:
                  type: integer
              required:
              - appointment_datetime
              - doctor_id
              - patient_id
    put:
      summary: "/api/v2/appointments/{id}/cancel"
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: appointment cancelled
        '422':
          description: invalid request
        '401':
          description: unauthorized
        '404':
          description: not found
      security:
      - Bearer: []
  "/api/v2/appointments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: Appointment ID
      schema:
        type: integer
    get:
      summary: Get an appointment
      tags:
      - Appointments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  appointment_datetime:
                    type: string
                  status:
                    type: string
                  doctor_id:
                    type: integer
                  patient_id:
                    type: integer
                required:
                - id
                - appointment_datetime
                - status
                - doctor_id
                - patient_id
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v2/appointments/{id}/accept":
    put:
      summary: Accept appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        description: Appointment ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: appointment accepted
        '401':
          description: unauthorized
        '404':
          description: appointment not found
  "/api/v2/calendar":
    get:
      summary: List appointments
      tags:
      - Appointments
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: Create an appointment
      tags:
      - Appointments
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created appointment
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_datetime:
                  type: string
                  format: date-time
                doctor_id:
                  type: integer
                patient_id:
                  type: integer
              required:
              - appointment_datetime
              - doctor_id
              - patient_id
  "/api/v2/calendar/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show an appointment
      tags:
      - Appointments
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: Update an appointment
      tags:
      - Appointments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: appointment updated
        '401':
          description: unauthorized
        '422':
          description: invalid request
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_datetime:
                  type: string
                  format: date-time
                doctor_id:
                  type: integer
                patient_id:
                  type: integer
  "/api/v2/conclusions":
    get:
      summary: List of all conclusions
      tags:
      - Conclusions
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: Create a conclusion
      tags:
      - Conclusions
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_id:
                  type: integer
                content:
                  type: string
                  default: The patient is doing well
              required:
              - appointment_id
              - content
  "/api/v2/conclusions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show a conclusion
      tags:
      - Conclusions
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: Update a conclusion
      tags:
      - Conclusions
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  default: The patient is doing better
              required:
              - content
  "/api/v2/doctors":
    get:
      summary: List all doctors
      tags:
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v2/create_doctor":
    post:
      summary: Creates a doctor
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created doctor
        '422':
          description: Invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  default: John
                last_name:
                  type: string
                  default: Doe
                second_name:
                  type: string
                  default: Doe
                email:
                  type: string
                  default: john.doe@example.com
                phone:
                  type: integer
                  default: '1234567890'
                birthday:
                  type: string
                  default: '1990-01-01'
                position:
                  type: string
                  default: Cardiologist
              required:
              - first_name
              - last_name
              - second_name
              - email
              - phone
              - birthday
              - position
  "/api/v2/doctor/{id}":
    delete:
      summary: Deletes a doctor by id
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        description: Doctor ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: doctor deleted
        '404':
          description: doctor not found
  "/api/v2/list_doctor_by_hospital":
    get:
      summary: Retrieves a list of doctors associated with the hospital
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    second_name:
                      type: string
                    email:
                      type: string
                    phone:
                      type: integer
                    birthday:
                      type: string
                    position:
                      type: string
                    rating:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    hospital_id:
                      type: integer
                  required:
                  - id
                  - first_name
                  - last_name
                  - second_name
                  - email
                  - phone
                  - birthday
                  - position
                  - rating
                  - created_at
                  - updated_at
                  - hospital_id
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v2/staff_appointments":
    get:
      summary: Retrieves a list of doctors appointments
      tags:
      - Doctors
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: returns a list of doctors
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    appointment_datetime:
                      type: string
                    status:
                      type: string
                    doctor_full_name:
                      type: string
                    hospital_name:
                      type: string
                    patient_full_name:
                      type: string
                  required:
                  - id
                  - appointment_datetime
                  - status
                  - doctor_full_name
                  - hospital_name
                  - patient_full_name
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v2/feedbacks/{type}/{id}":
    parameters:
    - name: type
      in: path
      description: type
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: list feedbacks
      tags:
      - Feedbacks
      responses:
        '200':
          description: successful
    post:
      summary: create feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: Test
                body:
                  type: string
                  default: It's just a test feedback
                rating:
                  type: integer
                  default: 5
  "/api/v2/feedbacks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    put:
      summary: update feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  default: Test
                body:
                  type: string
                  default: It's just a test feedback
                rating:
                  type: integer
                  default: 5
    delete:
      summary: delete feedback
      tags:
      - Feedbacks
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v2/hospitals":
    get:
      summary: List all hospitals
      tags:
      - Doctors and Hospitals
      responses:
        '200':
          description: successful
  "/api/v2/messages":
    get:
      summary: List all messages
      tags:
      - Messages
      parameters:
      - name: patient_id
        in: query
        required: true
        description: Patient ID
        schema:
          type: integer
      - name: doctor_id
        in: query
        required: true
        description: Doctor ID
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: Create a message
      tags:
      - Messages
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '201':
          description: returns the newly created message
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_id:
                  type: integer
                  default: 1
                doctor_id:
                  type: integer
                  default: 1
                content:
                  type: string
                  default: Hello, how are you feeling today?
              required:
              - patient_id
              - doctor_id
              - content
  "/api/v2/messages/{id}":
    patch:
      summary: Update a message
      tags:
      - Messages
      security:
      - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: message updated
        '422':
          description: invalid request
        '404':
          description: message not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  default: New message content
                patient_id:
                  type: integer
                doctor_id:
                  type: integer
    delete:
      summary: Deletes a message
      tags:
      - Messages
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: message deleted
        '401':
          description: unauthorized
        '404':
          description: not found
  "/api/v2/patient/address":
    post:
      summary: create patient_address
      tags:
      - Patient Address
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
    put:
      summary: update patient_address
      tags:
      - Patient Address
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address_type:
                  type: string
                  default: Основна
                settlement:
                  type: string
                  default: Черкаси
                house:
                  type: string
                  default: '1'
                apartments:
                  type: string
                  default: '1'
    delete:
      summary: delete patient_address
      tags:
      - Patient Address
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v2/patient/document":
    post:
      summary: create patient_document
      tags:
      - Patient Document
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                document_type:
                  type: string
                  default: Must be 'Passport' or 'IdCard'
                series:
                  type: string
                  default: Dont use for IdCard
                number:
                  type: string
                  default: '1111'
                issued_by:
                  type: string
                  default: '1111'
                date:
                  type: string
                  default: 12.04.2023
    put:
      summary: update patient_document
      tags:
      - Patient Document
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                document_type:
                  type: string
                  default: Must be 'Passport' or 'IdCard'
                series:
                  type: string
                  default: Dont use for IdCard
                number:
                  type: string
                  default: '1111'
                issued_by:
                  type: string
                  default: '1111'
                date:
                  type: string
                  default: 12.04.2023
    delete:
      summary: delete patient_document
      tags:
      - Patient Document
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v2/patient/work":
    post:
      summary: create patient_work
      tags:
      - Patient Work
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    put:
      summary: update patient_work
      tags:
      - Patient Work
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_type:
                  type: string
                  default: Основна
                place:
                  type: string
                  default: GeekHub
                position:
                  type: string
                  default: Студент
    delete:
      summary: delete patient_work
      tags:
      - Patient Work
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
  "/api/v2/patient/main-info":
    get:
      summary: list personal_infos
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: successful
    put:
      summary: update personal_info
      tags:
      - Personal Information
      security:
      - ApiKeyAuth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  default: Юзер
                last_name:
                  type: string
                  default: Юзеренко
                second_name:
                  type: string
                  default: Юзеренкович
                email:
                  type: string
                  default: user@test.rb
                phone:
                  type: string
                  default: "+380000000000"
                birthday:
                  type: string
                  default: 05.11.2003
                tin:
                  type: string
                  default: '1111111111'
                sex:
                  type: string
                  default: "'nothing', 'male' or 'female'"
  "/api/v2/search":
    get:
      summary: Search for a hospital or doctor in the region
      tags:
      - Search
      parameters:
      - name: query
        in: query
        description: |-
          Searching query for hospital or doctor. Input address, name, city for hospital or
                                        First Name, Last Name, specialty(position) for doctor
        required: false
        schema:
          type: string
      - name: region
        in: query
        description: |-
          Region filter. Enter the name of the region to search for a hospital or doctor in that
                                        location. If field leave empty, request was for all areas
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Hospitals and doctors found
          content:
            application/json:
              schema:
                type: object
                properties:
                  hospitals:
                    type: array
                  doctors:
                    type: array
        '422':
          description: Invalid search query
  "/api/v2/search_doctors_by_specialty":
    get:
      summary: Searching doctors by specialty
      tags:
      - Search
      parameters:
      - name: query
        in: query
        description: 'Searching doctor by First Name, Last Name, position '
        required: false
        schema:
          type: string
      - name: position
        in: query
        description: Doctor speciality
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Doctors found
          content:
            application/json:
              schema:
                type: object
                properties:
                  doctors:
                    type: array
        '422':
          description: Invalid search query
  "/api/v2/search_hospitals":
    get:
      summary: Searching hospitals
      tags:
      - Search
      parameters:
      - name: query
        in: query
        description: Searching hospital by name. If field leave empty request was
          for all hospitals
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Hospitals found
          content:
            application/json:
              schema:
                type: object
                properties:
                  hospitals:
                    type: array
        '422':
          description: Invalid search query
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
- url: https://{staging_host}
  variables:
    staging_host:
      default: www.behealth.pp.ua
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
      description: "{token}"
